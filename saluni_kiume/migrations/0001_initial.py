# Generated by Django 5.2.6 on 2025-10-12 10:39

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MaleSalon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('address', models.CharField(max_length=300)),
                ('region', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('street', models.CharField(max_length=200)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('phone', models.CharField(blank=True, max_length=16, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?[0-9]{9,15}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('opening_hours', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MaleBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No-show')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='male_bookings', to=settings.AUTH_USER_MODEL)),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='saluni_kiume.malesalon')),
            ],
            options={
                'ordering': ['-start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='MalePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('method', models.CharField(choices=[('mpesa', 'M-Pesa'), ('tigo_pesa', 'Tigo Pesa'), ('card', 'Card'), ('cash', 'Cash')], max_length=30)),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('success', 'Success'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='initiated', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='saluni_kiume.malebooking')),
            ],
        ),
        migrations.CreateModel(
            name='MaleReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='saluni_kiume.malebooking')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='male_reviews', to=settings.AUTH_USER_MODEL)),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='saluni_kiume.malesalon')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MaleService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('active', models.BooleanField(default=True)),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='saluni_kiume.malesalon')),
            ],
            options={
                'ordering': ['salon', 'name'],
                'unique_together': {('salon', 'name')},
            },
        ),
        migrations.AddField(
            model_name='malebooking',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='saluni_kiume.maleservice'),
        ),
        migrations.CreateModel(
            name='MaleStylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('bio', models.TextField(blank=True)),
                ('specialties', models.JSONField(blank=True, default=list, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('photo_url', models.URLField(blank=True, null=True)),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stylists', to='saluni_kiume.malesalon')),
            ],
            options={
                'ordering': ['salon', 'name'],
            },
        ),
        migrations.AddField(
            model_name='malebooking',
            name='stylist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='saluni_kiume.malestylist'),
        ),
        migrations.CreateModel(
            name='MaleAvailabilitySlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('is_booked', models.BooleanField(default=False)),
                ('stylist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='saluni_kiume.malestylist')),
            ],
            options={
                'ordering': ['stylist', 'start'],
            },
        ),
        migrations.AddIndex(
            model_name='malebooking',
            index=models.Index(fields=['salon', 'start_datetime'], name='saluni_kium_salon_i_8e7e20_idx'),
        ),
        migrations.AddIndex(
            model_name='malebooking',
            index=models.Index(fields=['customer', 'start_datetime'], name='saluni_kium_custome_d1ea1f_idx'),
        ),
        migrations.AddIndex(
            model_name='maleavailabilityslot',
            index=models.Index(fields=['stylist', 'start'], name='saluni_kium_stylist_6fcfba_idx'),
        ),
    ]
